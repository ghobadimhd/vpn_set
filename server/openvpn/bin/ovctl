#!/bin/bash

OPENVPNDIR=/etc/openvpn
EASYRSADIR=/etc/vpn-set/openvpn/easyrsa
KEYDIR=$EASYRSADIR/keys
CLIENTCONF=$OPENVPNDIR/client.conf


function list() {
    # print list of clients
    cd $EASYRSADIR/keys/
    if [ "`ls -1 *.crt | grep -vc '^server.crt$\|^ca.crt$'`" != "0" ] ; then
        CLIENTLIST=`ls -1 *.crt | grep -v '^server.crt$\|^ca.crt$' | sed 's/\(.*\)\.crt/\1/'`
        echo "$CLIENTLIST"
    fi
    return 0
}

function getprofile() {
    # Print cleint config
    CLIENTNAME=${1:? "Profile name missing"}
    CLIENTLIST=`list`
    if [ "`echo "$CLIENTLIST" | grep "$CLIENTNAME"`" != '' ] ; then
        cat << _EOF_
# Openvpn client config
`cat $CLIENTCONF`

# CA server certificate
<ca>
`cat $KEYDIR/ca.crt`
</ca>

<cert>
`cat $KEYDIR/$CLIENTNAME.crt`
</cert>

<key>
`cat $KEYDIR/$CLIENTNAME.key`
</key>
_EOF_
        return 0
    fi
}


function getcert() {
    # Print cleint config
    CLIENTNAME=$1
    CLIENTLIST=`list`
    if [ "`echo "$CLIENTLIST" | grep "$CLIENTNAME"`" != '' ]
    then

        echo "# $CLIENTNAME Certificate"
        cat $KEYDIR/$CLIENTNAME.crt

        return 0
    fi
}

function getkey() {
    # Print cleint config
    CLIENTNAME=$1
    CLIENTLIST=`list`
    if [ "`echo "$CLIENTLIST" | grep "$CLIENTNAME"`" != '' ]
    then
        echo "# $CLIENTNAME Private Key"
        cat $KEYDIR/$CLIENTNAME.key

        return 0
    fi
}

function addprofile() {
    # Create new client certificate and config
    if (( $# )) ; then 
        echo "Profile name is missing"
        usage
        return 1
    fi
    for CLIENTNAME in $@ ; do 
        CLIENTLIST=`list`
        if [ "`echo "$CLIENTLIST" | grep "$CLIENTNAME"`" != '' ] ; then
            echo "Profile certificate already exists"
            echo "use 'ovctl getprofile $CLIENTNAME' to retrive it configuration"
            return 1
        fi
        cd $EASYRSADIR
        . vars > /dev/null
        ./pkitool  &> /dev/null  $CLIENTNAME
        echo "use this command to retrive it's configuration:"
        echo "ovctl getprofile $CLIENTNAME"

    done
    return 0
}

function addprofile_bulk() {
    PREFIX=$1
    COUNT=$2
    CLIENTLIST=`list`
    if [ "$COUNT" == "" ] ; then  COUNT=0 ; fi
    if [ "$PREFIX" == "" ] ; then  echo "prefix missing\n"; usage ; return 1 ; fi
    cd $EASYRSADIR
    . vars > /dev/null
    for i in `seq 1 $COUNT` ; do
        CLIENTNAME=$PREFIX$i
        if [ "`echo "$CLIENTLIST" | grep "$CLIENTNAME"`" != '' ] ; then
            echo "client $CLIENTNAME certificate already exists"
        else
            ./pkitool  &> /dev/null  $CLIENTNAME
            echo "$CLIENTNAME"
        fi
    done
    echo "use this command to retrive it's configuration:"
    echo "ovctl getprofile CLIENTNAME"
}

function revoke() {
    if ! [ -e ~/.rnd ] ; then
        openssl rand -out ~/.rnd 512
    fi
    # revoke the client certificate
    CLIENTNAME=${1:? "Profile name missing"}
    CLIENTLIST=`list`
    if [ "`echo "$CLIENTLIST" | grep "$CLIENTNAME"`" != '' ] ; then
        cd $EASYRSADIR
        . vars > /dev/null
        ./revoke-full  $CLIENTNAME
        echo "certificate revoked"
    else
        echo "there is no client certificate with name $CLIENTNAME"
    fi
}

function usage() {
    # Help
    echo "addprofile, list, and print config file"
    echo ""
    echo "sub commands: "
    echo "    list                       print list of existing client certificates"
    echo "    addprofile CLIENTNAME         create new client certificate "
    echo "    addprofile_bulk PREFIX COUNT  create multiple client certificate"
    echo "    getprofile CLIENTNAME      print existing client profile"
    echo "    getcert CLIENTNAME         print existing client certificate"
    echo "    getkey CLIENTNAME          print existing client private key"
    echo "    revoke CLIENTNAME          revoke client certificate"
    echo "    help                       print this message"

}

function main() {
    case "$1" in
        list)
        shift
        list $@
        ;;
        addprofile)
        shift
        addprofile $@
        ;;
        addprofile_bulk)
        shift
        addprofile_bulk $@
        ;;
        getprofile)
        shift
        getprofile $@
        ;;
        getcert)
        shift
        getcert $@
        ;;
        getkey)
        shift
        getkey $@
        ;;
        revoke)
        shift
        revoke $@
        ;;
        -h|--help|help)
        usage
        exit 0
        ;;
        *)    # unknown option
        echo "Unknown option $!"
        usage
        exit 1
        ;;
    esac

}

main "$@"